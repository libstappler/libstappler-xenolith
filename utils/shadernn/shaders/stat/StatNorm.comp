#version 450
#extension GL_ARB_gpu_shader_int64 : enable

layout(local_size_x = 1, local_size_y = 64, local_size_z = 1) in;

struct NormData {
	uint64_t offset;
	uint64_t norm;
};

layout(set=0, binding=0) writeonly buffer Result { uint64_t result[]; };
layout(set=0, binding=1) readonly buffer Data { uint64_t data[]; };
layout(set=0, binding=2) readonly buffer Norm { NormData norm[]; };

struct InputInfo {
	int size;
	int fields;
};

layout (push_constant) uniform pcb {
	InputInfo inputInfo;
};

void main() {
	if (gl_GlobalInvocationID.x < inputInfo.fields && gl_GlobalInvocationID.y < inputInfo.size) {
		NormData n = norm[gl_GlobalInvocationID.x];
		result[gl_GlobalInvocationID.y * inputInfo.fields + gl_GlobalInvocationID.x]
			= (data[gl_GlobalInvocationID.y * inputInfo.fields + gl_GlobalInvocationID.x] - n.offset) / n.norm;
    }
}
